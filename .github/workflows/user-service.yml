name: CI/CD User Service

on:
  workflow_dispatch:
  push:
    paths:
      - 'user-service/**'
      - scripts/user-service.yaml
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: user-service

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm test

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud CLI with auth plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
          install_components: 'gke-gcloud-auth-plugin'

      - name: Activate Service Account
        run: |
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS

      - name: Print Service Account
        run: |
          gcloud auth list

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker ${{secrets.GCP_REGION}}-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          IMAGE=${{secrets.GCP_REGION}}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/todo-app/user-service:${{ github.sha }}
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} \
            --zone ${{ secrets.GKE_CLUSTER_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to GKE
        run: |
          # Create namespace if it doesn't exist
          kubectl create namespace todo-app --dry-run=client -o yaml | kubectl apply -f -
          
          # Process and apply manifest
          export IMAGE=${{secrets.GCP_REGION}}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/todo-app/user-service:${{ github.sha }}
          cat scripts/user-service.yaml | envsubst | kubectl apply -f -
          
          # Verify deployment
          kubectl rollout status deployment/user-service --namespace=todo-app
        working-directory: .
          